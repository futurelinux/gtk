pkgname=firefox
pkgver=68.0.2
pkgrel=1
pkgdesc="Standalone web browser from mozilla.org with OpenSUSE patch, integrate better with KDE"
arch=('x86_64')
license=('MPL' 'GPL' 'LGPL')
url="https://www.mozilla.org/firefox/"
depends=(gtk3 mozilla-common libxt startup-notification mime-types dbus-glib ffmpeg
         libevent libproxy nss xdg-desktop-portal)
makedepends=(unzip zip diffutils python2 yasm mesa imake inetutils xorg-server-xvfb
             autoconf2.13 gtk2 gobject-introspection jack rust llvm clang lld cbindgen nodejs nasm)
optdepends=('networkmanager: Location detection via available WiFi networks'
            'libnotify: Notification integration'
            'upower: Battery API'
            'firefox-i18n: For multilanguage support'
            'hunspell: For spellchecking support')
screenshot="http://img864.imageshack.us/img864/5116/firefoxm.png"
#
# To whom want to update this package
#
# Notes on mercurial release revision
# http://releases.mozilla.org/pub/mozilla.org/firefox/releases/${pkgver}/SOURCE
# This URL uses CDN so it's faster, but maybe out of date when new firefox release comes out.
#
# Find Firefox KDE related patch:
# patch http://www.rosenauer.org/hg/mozilla/
# patch https://build.opensuse.org/package/show?package=MozillaFirefox&project=mozilla%3AFactory
#
# Usually, we also port non-openSUSE specific patch together.
#
_kmozillahelper_commit=2ca28e0 #v5.0.2
_kdepatchrev=eca1c1f2fe50
_kdepatchurl=http://www.rosenauer.org/hg/mozilla/raw-file/$_kdepatchrev

# To decide _ubuntuver, check the firefox_$pkgver+*.debian.tar.xz file at http://archive.ubuntu.com/ubuntu/pool/main/f/firefox/
_ubuntuver=build1-0ubuntu2
# Gentoo patches are from https://dev.gentoo.org/~{anarchy,axs,polynomial-c,whissi}/mozilla/patchsets/${PATCH}.tar.xz

# Another mirror for release tarball can be found here: https://ftp.mozilla.org/pub/firefox/releases/
source=("https://releases.mozilla.org/pub/firefox/releases/${pkgver}/source/${pkgname}-${pkgver}.source.tar.xz"{,.asc}
        0001-Use-remoting-name-for-GDK-application-names.patch

        # Gentoo patch
        1003_foritify_sources_properly.patch
        2000_system_harfbuzz_support.patch
        2001_system_graphite2_support.patch

        # Ubuntu patch
        "http://archive.ubuntu.com/ubuntu/pool/main/f/firefox/${pkgname}_${pkgver%%.2}.1+${_ubuntuver}.debian.tar.xz"

        # Unused patchset
        # gecko-lockdown.patch
        # firefox-ui-lockdown.patch
        # toolkit-ui-lockdown.patch: this and above, Not appliable
        # mozilla-gconf-backend.patch: we disabled gconf
        # mozilla-bmo1463035.patch: not our targetted architecture
        # mozilla-bmo256180.patch: don't know what it is for
        # mozilla-cubeb-noreturn.patch looks like this should be upstreamed
        # mozilla-no-stdcxx-check.patch: we just passed it
        # mozilla-ntlm-full-path.patch: not affected it seems
        # mozilla-reduce-files-per-UnifiedBindings.patch
)
# To fetch the following key, use the command, replace $pkgver with real version number
#   curl 'https://releases.mozilla.org/pub/firefox/releases/$pkgver/KEY' -o - | gpg --import
validpgpkeys=('14F26682D0916CDD81E37B6D61B7B526D98F0353') # Mozilla Software Releases <release@mozilla.com>
sha256sums=('9b3e6d8f99819f9eda9ebba403b644a2b96d19450b42cae422bbf4386902a840'
            'SKIP'
            'ab07ab26617ff76fce68e07c66b8aa9b96c2d3e5b5517e51a3c3eac2edd88894'
            'e5d8f0410ecd05119119e2d44a88fb5f1eb67a5b1035fd0a66b8cf167fb81c5d'
            '21949f918907e16919820784bfb51540714c7bb256e219a3d965387b14b18886'
            '8afb2dbc729487aaf6e43e0ce0e86fb51c6f0bd27c3b6580dbb0c431c1cf9aa0'
            '4b8316390f2d14deb123e26a932b74adf40b7a9a17ad16377c804a49bfa2df9d')


# Google API keys (see http://www.chromium.org/developers/how-tos/api-keys)
# Note: These are for Chakra Linux use ONLY. For your own distribution, please
# get your own set of keys. Feel free to contact totte@chakralinux.org for
# more information.
_google_api_key=AIzaSyDjyg8EmaRUIsewzdjZXFZ0O8N5ARDUDGU

# Mozilla API keys (see https://location.services.mozilla.com/api)
# Note: These are for Chakra Linux use ONLY. For your own distribution, please
# get your own set of keys. Feel free to contact totte@chakralinux.org for
# more information.
_mozilla_api_key=bf05f841-e0bd-4644-81f5-3c132755f2e9


prepare() {
  mkdir path
  ln -s /usr/bin/python2 path/python

  sed -e '/%%/d' \
      -e '/@MOZ_DISPLAY_NAME@/d' \
      -e "s/@MOZ_APP_NAME@/$pkgname/g" \
      -i $srcdir/debian/firefox.desktop.in

  #cd ${srcdir}/mozilla-release-${_changeset}
  cd ${srcdir}/${pkgname}-${pkgver}

  echo -n "$_google_api_key" > google-api-key
  echo -n "$_mozilla_api_key" > mozilla-api-key

# There multiple default mozconfigs in the soruce tree with references across directories
# $topsrcdir/build/unix/mozconfig.gtk
# $topsrcdir/build/unix/mozconfig.linux
# $topsrcdir/build/mozconfig.common
# $topsrcdir/browser/config/mozconfigs/linux64/release
# $topsrcdir/browser/config/mozconfigs/linux64/common-opt
# $topsrcdir/browser/config/mozconfig
# $topsrcdir/build/mozconfig.rust
# But we intend to mantain our own mozconfig without reference to any of the mozilla upstream configuration to keep it simple
# This mozconfig would inlcude most of the configurations listed above into one file
  msg 'Generating mozconfig'
  cat >.mozconfig <<END
ac_add_options --prefix=/usr
ac_add_options --enable-release
ac_add_options --enable-gold
ac_add_options --enable-optimize="-O2"
ac_add_options --disable-elf-hack
ac_add_options --enable-rust-simd
ac_add_options --enable-lto
ac_add_options --enable-hardening

# Release branding
ac_add_options --enable-application=browser
ac_add_options --enable-official-branding
ac_add_options --enable-update-channel=release
ac_add_options --with-distribution-id=org.chakralinux
ac_add_options --enable-default-toolkit=cairo-gtk3
export MOZILLA_OFFICIAL=1
export MOZ_REQUIRE_SIGNING=1
#export MOZ_PGO=1

# Keys
ac_add_options --with-google-location-service-api-keyfile=${PWD@Q}/google-api-key
ac_add_options --with-google-safebrowsing-api-keyfile=${PWD@Q}/google-api-key
ac_add_options --with-mozilla-api-keyfile=${PWD@Q}/mozilla-api-key

# System libraries
ac_add_options --with-system-jpeg
ac_add_options --with-system-zlib
ac_add_options --with-system-bz2
ac_add_options --with-system-libevent
#ac_add_options --with-system-libvpx
ac_add_options --with-system-nss
ac_add_options --with-system-nspr
#ac_add_options --with-system-icu
ac_add_options --with-system-png
ac_add_options --enable-system-pixman
ac_add_options --enable-system-sqlite
ac_add_options --enable-system-ffi
ac_add_options --enable-libproxy

# Features
ac_add_options --enable-startup-notification
ac_add_options --enable-jack
ac_add_options --enable-alsa
ac_add_options --disable-gconf
ac_add_options --disable-updater
ac_add_options --disable-crashreporter

mk_add_options MOZ_MAKE_FLAGS="-j9"
#mk_add_options PROFILE_GEN_SCRIPT='EXTRA_TEST_ARGS=10 \$(MAKE) -C \$(MOZ_OBJDIR) pgo-profile-run'
STRIP_FLAGS="--strip-debug"
END

  msg 'Arch Patch'
  patch -Np1 -i $srcdir/0001-Use-remoting-name-for-GDK-application-names.patch

  msg "Gentoo Patchset"
  patch -Np1 -i $srcdir/1003_foritify_sources_properly.patch
  patch -Np1 -i $srcdir/2000_system_harfbuzz_support.patch
  patch -Np1 -i $srcdir/2001_system_graphite2_support.patch

  msg "Ubuntu Patchset"
  patch -Np1 -i $srcdir/debian/patches/unity-menubar.patch
}

build() {
  cd $srcdir/${pkgname}-${pkgver}

  export PATH="$srcdir/path:$PATH"
  export MOZ_NOSPAM=1
  export SHELL=/bin/bash
  export MOZBUILD_STATE_PATH="$srcdir/mozbuild"

  # LTO requires opening more files
  ulimit -n 4096

  # Do PGO
#  xvfb-run -a -n 97 -s "-extension GLX -screen 0 1280x1024x24" \
   ./mach build
}

package() {
  #cd "$srcdir/mozilla-release-${_changeset}"
  cd $srcdir/${pkgname}-${pkgver}
 
  export SHELL=/bin/bash
  DESTDIR="$pkgdir" ./mach install

  _vendorjs="$pkgdir/usr/lib/firefox/browser/defaults/preferences/vendor.js"
  install -Dm644 /dev/stdin "$_vendorjs" <<END
// Use LANG environment variable to choose locale
pref("intl.locale.requested", "");

// Use system-provided dictionaries
pref("spellchecker.dictionary_path", "/usr/share/hunspell");

// Disable default browser checking.
pref("browser.shell.checkDefaultBrowser", false);

// Enable Network Manager integration
pref("network.manage-offline-status", true);

// Don't disable our bundled extensions in the application directory
pref("extensions.autoDisableScopes", 11);
pref("extensions.shownSelectionUI", true);

// Force HW acceleration
pref("layers.acceleration.force-enabled",  true);
pref("webgl.force-enabled",                true);
END

  msg 'Chakra branding'
  _distini="$pkgdir/usr/lib/firefox/distribution/distribution.ini"
  install -Dm644 /dev/stdin "$_distini" <<END
[Global]
id=chakralinux
version=1.0
about=Mozilla Firefox compiled by Chakra GNU/Linux

[Preferences]
app.distributor=chakralinux
app.distributor.channel=firefox
app.partner.chakralinux=chakralinux
browser.search.geoSpecificDefaults=false
END
  for i in 16 22 24 32 48 64 128 256; do
    install -Dm644 browser/branding/official/default$i.png \
      "$pkgdir/usr/share/icons/hicolor/${i}x${i}/apps/firefox.png"
  done
  install -Dm644 browser/branding/official/content/about-logo.png \
    "$pkgdir/usr/share/icons/hicolor/192x192/apps/firefox.png"
  install -Dm644 browser/branding/official/content/about-logo@2x.png \
    "$pkgdir/usr/share/icons/hicolor/384x384/apps/firefox.png"

  install -Dm644 $srcdir/debian/firefox.desktop.in \
    "$pkgdir/usr/share/applications/firefox.desktop"

  # Install a wrapper to avoid confusion about binary path
  install -Dm755 /dev/stdin "$pkgdir/usr/bin/firefox" <<END
#!/bin/sh
export GTK_USE_PORTAL=1
exec /usr/lib/firefox/firefox "\$@"
END

  # Replace duplicate binary with wrapper
  # https://bugzilla.mozilla.org/show_bug.cgi?id=658850
  ln -srf "$pkgdir/usr/bin/firefox" \
    "$pkgdir/usr/lib/firefox/firefox-bin"
}
